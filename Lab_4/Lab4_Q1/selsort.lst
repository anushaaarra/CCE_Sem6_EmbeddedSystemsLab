


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             RESET, DATA, READONLY
    2 00000000                 EXPORT           __Vectors
    3 00000000         __Vectors
    4 00000000 10001000        DCD              0X10001000
    5 00000004 00000000        DCD              Reset_Handler
    6 00000008                 ALIGN
    7 00000008                 AREA             mycode, CODE, READONLY
    8 00000000                 ENTRY
    9 00000000                 EXPORT           Reset_Handler
   10 00000000         Reset_Handler
   11 00000000 F04F 0504       MOV              R5,#0X4
   12 00000004 F04F 0103       MOV              R1, #0X3
   13 00000008 F04F 0201       MOV              R2, #0X1
   14 0000000C F04F 0305       MOV              R3, #0x5
   15 00000010 F04F 0402       MOV              R4, #0X2
   16 00000014 F06F 0601       MOV              R6, #-2
   17 00000018 4817            LDR              R0, =SARRAY
   18 0000001A F840 5B04       STR              R5, [R0],#4
   19 0000001E F840 1B04       STR              R1, [R0],#4
   20 00000022 F840 2B04       STR              R2, [R0],#4
   21 00000026 F840 3B04       STR              R3, [R0],#4
   22 0000002A F840 4B04       STR              R4, [R0],#4
   23 0000002E F840 6B04       STR              R6, [R0], #4
   24 00000032 4811            LDR              R0, =SARRAY
   25 00000034 F100 0B18       ADD              R11, R0, #24 ;pointer to last l
                                                            ocation
   26 00000038 F240 0305 
              F2C0 0300        MOV32            R3, #5      ;N-1
   27 00000040         
   28 00000040 6804    OL      LDR              R4, [R0]    ; R4=first element 
                                                            the array
   29 00000042 4607            MOV              R7, R0
   30 00000044 F107 0704       ADD              R7, R7, #4  ; R6=second element
                                                             array
   31 00000048 683E    IL      LDR              R6, [R7]    ;
   32 0000004A 42A6            CMP              R6, R4      ; CHECK IF SECOND E
                                                            LEMENT IS LESSER TH
                                                            AN FIRST
   33 0000004C DD00            BLE              L1
   34 0000004E E002            B                LL1
   35 00000050 46B8    L1      MOV              R8, R7      ; MOVE THE ADDR OF 
                                                            LESSER ELEMENT IN R
                                                            8
   36 00000052 F8D8 4000       LDR              R4, [R8]    ; LOAD THE LESSER E
                                                            LEMENT IN R4
   37 00000056 F107 0704 
                       LL1     ADD              R7, R7,#4   ; INCREMENT THE ADD
                                                            RESS POINTER BY 4
   38 0000005A 455F            CMP              R7, R11     ; IF R7 and R11 POI
                                                            NTS TO SAME ADDRESS
                                                             , STOP INNER LOOP
   39 0000005C D1F4            BNE              IL
   40 0000005E 6805            LDR              R5, [R0]    ; PUT THE SMALLEST 
                                                            LOCATION IN THE FIR
                                                            ST PLACE
   41 00000060 6004            STR              R4, [R0]
   42 00000062 F8C8 5000       STR              R5, [R8]
   43 00000066 F1A3 0301 
                       L2      SUB              R3, R3, #1  ; REDUCE THE ITERAT



ARM Macro Assembler    Page 2 


                                                            ION OF OUTERLOOP BY
                                                             ONE
   44 0000006A 2B00            CMP              R3, #0
   45 0000006C D003            BEQ              STOP
   46 0000006E F100 0004       ADD              R0, R0, #4  ;MAKE SECOND ELEMEN
                                                            T IN THE ARRAY AS T
                                                            HE FIRST ELEMENT OF
                                                             THE ARRAY TO START
                                                             NEXT ITERATION OF 
                                                            THE OUTER LOOP
   47 00000072         
   48 00000072 4680            MOV              R8, R0
   49 00000074 E7E4            B                OL
   50 00000076 E7FE    STOP    B                STOP
   51 00000078         
   52 00000078 00000000 
              00000000         AREA             MDATA, DATA, READWRITE
   53 00000000 00000000 
                       SARRAY  DCD              0
   54 00000004                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=selsort.
d -oselsort.o -I"D:\Keil Software\ARM\RV31\INC" -I"D:\Keil Software\ARM\CMSIS\I
nclude" -I"D:\Keil Software\ARM\Inc\NXP\LPC17xx" --predefine="__EVAL SETA 1" --
list=selsort.lst selsort.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 1 in file selsort.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 3 in file selsort.s
   Uses
      At line 2 in file selsort.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

IL 00000048

Symbol: IL
   Definitions
      At line 31 in file selsort.s
   Uses
      At line 39 in file selsort.s
Comment: IL used once
L1 00000050

Symbol: L1
   Definitions
      At line 35 in file selsort.s
   Uses
      At line 33 in file selsort.s
Comment: L1 used once
L2 00000066

Symbol: L2
   Definitions
      At line 43 in file selsort.s
   Uses
      None
Comment: L2 unused
LL1 00000056

Symbol: LL1
   Definitions
      At line 37 in file selsort.s
   Uses
      At line 34 in file selsort.s
Comment: LL1 used once
OL 00000040

Symbol: OL
   Definitions
      At line 28 in file selsort.s
   Uses
      At line 49 in file selsort.s
Comment: OL used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 10 in file selsort.s
   Uses
      At line 5 in file selsort.s
      At line 9 in file selsort.s

STOP 00000076

Symbol: STOP
   Definitions
      At line 50 in file selsort.s
   Uses
      At line 45 in file selsort.s
      At line 50 in file selsort.s

mycode 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: mycode
   Definitions
      At line 7 in file selsort.s
   Uses
      None
Comment: mycode unused
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MDATA 00000000

Symbol: MDATA
   Definitions
      At line 52 in file selsort.s
   Uses
      None
Comment: MDATA unused
SARRAY 00000000

Symbol: SARRAY
   Definitions
      At line 53 in file selsort.s
   Uses
      At line 17 in file selsort.s
      At line 24 in file selsort.s

2 symbols
345 symbols in table
